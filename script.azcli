
git clone  https://github.com/lenisha/spring-music-azure.git
cd spring-music-azure
# Multi-stage build
az acr build --registry acrcbio --image spring-music-azure:latest .

#Start ACI container
export ACR_PASS=$(az acr credential show --name acrcbio --query "passwords[0].value" --output tsv)
az container create -g aks -n springmusic --image acrcbio.azurecr.io/spring-music-azure:latest \
--dns-name-label springmusic-demo --ports 8080 --registry-username acrcbio --registry-password $ACR_PASS \
--restart-policy Always --memory 4 --cpu 2 --location canadacentral

#ACI Logs
az container logs -g aks -n springmusic

az container show -g aks -n springmusic --query instanceView.state

#Shutdown container
curl -X POST springmusic-demo.canadacentral.azurecontainer.io:8080/shutdown

#Helm Upgrade
helm install  -n spring-music helm/spring-music/
helm upgrade --install --recreate-pods --wait spring-music helm/spring-music/
k scale --replicas=2 deployment/spring-music

export SERVICE_IP=$(kubectl get svc --namespace default azuredevops-spring-music -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
echo http://$SERVICE_IP:80

# WEBAPP Logs
az webapp log tail --name spring-music-docker --resource-group aks



# Kubectl add secret o ACR
#kubectl create secret docker-registry acr-auth --docker-server demoaksacr.azurecr.io --docker-username demoaksacr --docker-password $ACR_PASS
# Tiller account
kubectl create serviceaccount --namespace kube-system tiller
kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller
kubectl patch deploy --namespace kube-system tiller-deploy -p '{"spec":{"template":{"spec":{"serviceAccount":"tiller"}}}}'      
helm init --service-account tiller --upgrade